apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  namespace: {{ .Values.app.namespace | default "default" }}
  labels:
    app: {{ .Values.app.name }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount | default "1" }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
      - name: {{ .Values.app.name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        env:
        - name: CPU
          value: "{{ .Values.server.cpu }}"
        - name: THREAD
          value: "{{ .Values.server.thread }}"
        securityContext:
          privileged: true
        lifecycle:
          postStart:
            exec:
              command: ["sh", "-c", "echo {{ .Values.configFileValues }} > /app/config.txt && dockerd >/tmp/docker.stdout 2>/tmp/docker.stderr &"]
        ports:
        - containerPort: {{ .Values.service.port | default "5000" }}
        volumeMounts:
        - mountPath: /app/input_files
          name: helmchartvolume
      volumes:
      - name: helmchartvolume
        persistentVolumeClaim:
          claimName: {{ .Values.PersistentVolumeClaim.name }}